{"version":3,"sources":["server.ts"],"names":[],"mappings":";;AAAA,mCAMiB;AACjB,2CAAqC;AACrC,2CAAsC;AACtC,6BAAwB;AACxB,qCAAgC;AAChC,6BAAwB;AACxB,iCAAgC;AAChC,oDAA6C;AAE7C,IAAM,GAAG,GAAG,oBAAO,EAAE,CAAC;AACtB,eAAM,EAAE,CAAC;AAET,YAAY;AACZ,GAAG,CAAC,GAAG,CACL,iBAAI,CAAC;IACH,WAAW,EAAE,IAAI;CAClB,CAAC,CACH,CAAC;AACF,GAAG,CAAC,GAAG,CAAC,wBAAW,EAAE,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,wBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,oBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,oBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEhD,oBAAoB;AACpB,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,oBAAO,CAAC,MAAM,CAAC,iBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AAEvE,oBAAoB;AACpB,qBAAQ;KACL,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAU,CAAC;KAC/B,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAA5D,CAA4D,CAAC,CACxE,OAAK,CAAA,CAAC,UAAC,GAAG;IACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AAEL,WAAW;AACX,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,wBAAS,CAAC,CAAC;AAC3B,kCAAkC;AAClC,GAAG,CAAC,GAAG,CACL,UACE,GAAwB,EACxB,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,IAAI,GAAG,CAAC,IAAI,KAAK,kBAAkB,EAAE;QACnC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;QAC7D,IAAI,EAAE,CAAC;KACR;IAED,IAAI,GAAG,CAAC,IAAI,KAAK,iBAAiB,EAAE;QACjC,GAAG;aACD,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC,CAAC;QAE9D,IAAI,EAAE,CAAC;KACV;IAED,IAAI,EAAE,CAAC;AACT,CAAC,CACF,CAAC;AAEF,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;AAC3C,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC","file":"server.js","sourcesContent":["import express, {\r\n  Request,\r\n  Response,\r\n  Errback,\r\n  ErrorRequestHandler,\r\n  NextFunction,\r\n} from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nimport compression from \"compression\";\r\nimport cors from \"cors\";\r\nimport mongoose from \"mongoose\";\r\nimport path from \"path\";\r\nimport { config } from \"dotenv\";\r\nimport imgRouter from \"./router/image-route\";\r\n\r\nconst app = express();\r\nconfig();\r\n\r\n//middleware\r\napp.use(\r\n  cors({\r\n    credentials: true,\r\n  })\r\n);\r\napp.use(compression());\r\napp.use(bodyParser.json());\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n//image folder route\r\napp.use(\"/codetest\", express.static(path.join(__dirname, \"codetest\")));\r\n\r\n//connect to mongodb\r\nmongoose\r\n  .connect(process.env.MONGO_URL!)\r\n  .then(() => console.log(\"connected with MONGODB\", process.env.MONGO_URL))\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n// api path\r\napp.use(\"/api\", imgRouter);\r\n//checking image type and response\r\napp.use(\r\n  (\r\n    err: ErrorRequestHandler,\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    if (err.name === \"LIMIT_FILE_TYPES\") {\r\n      res.status(422).json({ message: \"Only images are allowed\" });\r\n      next();\r\n    }\r\n\r\n    if (err.name === \"LIMIT_FILE_SIZE\") {\r\n       res\r\n        .status(422)\r\n        .json({ message: \"Too large. Max size is allowed only 5MB\" });\r\n\r\n        next();\r\n    }\r\n\r\n    next();\r\n  }\r\n);\r\n\r\nconst PORT = process.env.PORT || 5000;\r\nconsole.log(\"server is running on \", PORT);\r\napp.listen(PORT);\r\n"]}