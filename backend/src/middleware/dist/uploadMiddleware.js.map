{"version":3,"sources":["uploadMiddleware.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,iCAA2B;AAC3B,mCAA0B;AAE1B,mDAAuC;AACvC,6BAAuB;AACvB,iCAA8B;AAC9B,eAAM,EAAE,CAAC;AAEH,IAAA,gBAA0C,EAAxC,4BAAW,EAAE,4BAA2B,CAAC;AAgCjD,IAAM,cAAc,GAAG,IAAI,oBAAG,CAAC,QAAQ,CAAC,WAAkB,CAAC,CAAC;AAG5D,IAAM,EAAE,GAAG,IAAI,oBAAG,CAAC,EAAE,CAAC;IACpB,QAAQ,EAAE,cAAc;CACzB,CAAC,CAAC;AAGH,IAAM,YAAY,GAAG,4BAAQ,CAAC;IAC5B,EAAE,IAAA;IACF,OAAO,EAAE,GAAG;IACZ,MAAM,EAAK,WAAW,cAAW;IACjC,GAAG,EAAE,aAAa;IAClB,MAAM,EAAE;QACN,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;KACZ;IACD,GAAG,EAAE,IAAI;IACT,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE;IACrC,wDAAwD;IACxD,QAAQ,EAAE,UAAC,GAAW,EAAE,IAAc,EAAE,EAAM;QAC5C,EAAE,CAAC,IAAI,EAAE;YACP,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,GAAG,EAAE,UAAC,GAAW,EAAE,IAAc,EAAE,EAAM;QACvC,EAAE,CACA,IAAI,EACJ,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CACtE,CAAC;IACJ,CAAC;CACY,CAAC,CAAC;AAEjB,kBAAkB;AAClB,IAAM,UAAU,GAAG,UAAC,GAAY,EAAE,IAAc,EAAE,EAAO;IAGxD,WAAW;IACR,IAAM,SAAS,GAAG,kBAAkB,CAAC;IACrC,WAAW;IACX,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,iBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAA;IACnF,iBAAiB;IACjB,IAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAE/C,IAAI,QAAQ,IAAI,OAAO,EAAE;QACrB,OAAO,EAAE,CAAC,IAAI,EAAC,IAAI,CAAC,CAAA;KACvB;SAAM;QACL,IAAM,KAAK,GAAG,iBAAiB,CAAC;QAClC,oCAAoC;QACnC,OAAO,EAAE,CAAC,KAAK,EAAC,KAAK,CAAC,CAAA;KACtB;AACL,CAAC,CAAC;AAEF,IAAM,UAAU,GAAG,mBAAM,CAAC;IACtB,OAAO,EAAE,YAAY;IACvB,UAAU,EAAE,UAAU;CACvB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAEL,QAAA,UAAU,GAAG,EAAC,UAAU,YAAA,EAAE,EAAE,IAAA,EAAC,CAAA","file":"uploadMiddleware.js","sourcesContent":["\"use strict\";\r\n\r\nimport multer from 'multer'\r\nimport AWS from 'aws-sdk';\r\nimport { Request, Response } from 'express';\r\nimport multerS3 from \"multer-sharp-s3\";\r\nimport path from 'path'\r\nimport {config} from 'dotenv';\r\nconfig();\r\n\r\nconst { S3_ENDPOINT, BUCKET_NAME } = process.env;\r\n\r\n\r\ntype FileData = {\r\n    originalname: string,\r\n    fieldname: string,\r\n    mimetype : string\r\n}\r\n\r\n//declare data type for multer-  S3 Strorage data\r\ninterface S3dataType {\r\n    s3: AWS.S3,\r\n    dirname: string,\r\n    Bucket : string,\r\n    ACL : string,\r\n    resize? : Resize,\r\n    max : Boolean,\r\n    limits : Limit,\r\n    metadata : any,\r\n    Key : any,\r\n}\r\n\r\ntype Resize = {\r\n    width: number,\r\n    height: number,\r\n   \r\n}\r\ntype Limit = {\r\n    fileSize: number\r\n   \r\n}\r\n\r\nconst spacesEndpoint = new AWS.Endpoint(S3_ENDPOINT as any);\r\n\r\n\r\nconst s3 = new AWS.S3({\r\n  endpoint: spacesEndpoint,\r\n});\r\n\r\n\r\nconst storageposts = multerS3({\r\n  s3,\r\n  dirname: \"/\",\r\n  Bucket: `${BUCKET_NAME}/codetest`,\r\n  ACL: \"public-read\",\r\n  resize: {\r\n    width: 850,\r\n    height: 700,\r\n  },\r\n  max: true,\r\n  limits: { fileSize: 1024 * 1024 * 5 }, //  allowed only 5 MB files\r\n  // limits: Imagelimit(file), //  allowed only 5 MB files\r\n  metadata: (req:Request, file: FileData, cb:any) => {\r\n    cb(null, {\r\n      fieldname: file.fieldname,\r\n    });\r\n  },\r\n\r\n  Key: (req:Request, file: FileData, cb:any) => {\r\n    cb(\r\n      null,\r\n      new Date().toISOString().replace(/:/g, \"-\") + \"-\" + file.originalname\r\n    );\r\n  },\r\n} as S3dataType);\r\n\r\n// Check File Type\r\nconst filefilter = (req: Request, file: FileData, cb: any) => {\r\n  \r\n\r\n //Allow ext\r\n    const filetypes = /jpeg|jpg|png|gif/;\r\n    //Check ext\r\n    const extname = filetypes.test(path.extname(file.originalname).toLocaleLowerCase())\r\n    //Check mime type\r\n    const mimetype = filetypes.test(file.mimetype);\r\n\r\n    if (mimetype && extname) {\r\n        return cb(null,true)\r\n    } else {\r\n      const error = \"Wrong file Type\";\r\n    //  error.name = \"LIMIT_FILE_TYPES\";\r\n     return cb(error,false)\r\n    }\r\n};\r\n\r\nconst uploadImgs = multer({\r\n    storage: storageposts,\r\n  fileFilter: filefilter,\r\n}).array(\"files\");\r\n\r\nexport const UploadData = {uploadImgs, s3}\r\n\r\n\r\n\r\n"]}